node {
    env.JAVA_HOME="${tool 'jdk-1.8.121'}"
    env.PATH="${env.JAVA_HOME}/bin:${env.PATH}"
    env.SBT_HOME = "${tool 'sbt-1.0.0-M4'}"
    
    email_to = "oscar.cbls-cetic@lists.cetic.be"

    try{
    stage('print') {
        sh 'printenv'
    }
        stage('scm') {
            checkout scm: [
                $class: 'MercurialSCM',
                source: 'https://bitbucket.org/oscarlib/oscar',
                revision: env.BRANCH_NAME,
                revisionType: 'BRANCH',
                clean: true
            ],
            poll: false
        }
        
        env.PARAMS = "-Dis_cetic=true -DBRANCH_NAME='${env.BRANCH_NAME}' -DREVISION_ID='${env.MERCURIAL_REVISION}' -DBUILD_ID='${env.BUILD_ID}'"
        env.SBT_CMD = "${env.SBT_HOME}/bin/sbt -Dsbt.log.noformat=true ${env.PARAMS} 'project oscar-cbls'"

        stage('Build') {
            sh "${env.SBT_CMD} compile"
        }
        stage('Test') {
            sh "${env.SBT_CMD} test"
        }
        stage('Package') {
            sh "${env.SBT_CMD} package -Xdisable-assertions "
        }
        stage('Publish') {
            sh "${env.SBT_CMD} publish -Xdisable-assertions"
        }
        
    }
    catch (err) {
        currentBuild.result = "FAILURE"

        step([$class: 'Mailer',
           notifyEveryUnstableBuild: true,
           recipients: "${email_to}",
           sendToIndividuals: true])

        throw err
    }
}
